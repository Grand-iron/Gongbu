# 🎮 생성형 AI가 작용하는 게임 구조 모델링 및 구현

이 프로젝트는 **게임 내 생성형 AI와의 상호작용**을 모델링하고,  
그에 따른 **원시코드 기반 구현 및 모듈 평가**를 수행한 것입니다.

---

## ⓐ 시퀀스 다이어그램

플레이어가 생성형 AI 캐릭터에게 메시지를 보내고,  
AI 서버가 응답을 반환하며 게임 클라이언트가 상태를 반영하는 흐름입니다.
예시 상황은 플레이어가 임무를 완수하고 100골드를 지급받는 상황입니다.
다이어그램 이미지는 a.jpg파일을 참조해주세요.

```mermaid
sequenceDiagram
    participant Player
    participant GameClient
    participant AI_Server

    Player->>GameClient: 대화 입력 ("임무 완료했어")
    GameClient->>AI_Server: 메시지 전송
    AI_Server-->>GameClient: "수고했어. 100골드를 지급하지."
    GameClient->>GameClient: 골드 +100 반영
    GameClient-->>Player: 응답 출력 + 상태 변경
```

---

## ⓑ 샘플 코드 설명

샘플 코드는 `b.py` 파일에 포함되어 있으며, Python의 절차적 프로그래밍 방식으로 구성되었습니다.

### ✔ 구현 특징
- 플레이어의 입력을 받아 AI 서버에 전달합니다.
- AI의 텍스트 응답에 `"100골드"`라는 키워드가 포함되면 게임 상태에 골드를 추가합니다.
- 간단한 상태 출력 기능이 포함되어 있어 상호작용 결과를 즉시 확인할 수 있습니다.

> 📂 실제 코드는 `b.py` 파일을 참고하세요.

---

## ⓒ 샘플 코드의 모듈 평가 결과

| 항목 | 평가 | 설명 |
|------|------|------|
| **응집도 (Cohesion)** | 🟡 중간 | 각 함수는 입력, 통신, 출력 등으로 나뉘어 있지만 게임 상태 처리와 조건 로직이 분산되어 있어 응집도가 완전하지는 않음. |
| **결합도 (Coupling)** | 🟠 중간~높음 | AI 응답 텍스트에 강하게 의존하며(예: `"100골드"` 포함 여부), 서버 URL도 하드코딩되어 있어 변경에 유연하지 않음. 향후 JSON 응답 구조 설계가 필요함. |

---

## 📌 요약

- **Mermaid 다이어그램**으로 구조를 시각화하고,  
- 해당 흐름을 **절차적 Python 코드**로 구현,  
- **응집도와 결합도 관점에서 모듈 구조를 평가**한 프로젝트입니다.

이 구조는 실제 게임에서 **생성형 AI가 클라이언트에 영향을 주는 기본 시스템 설계**에 응용될 수 있습니다.